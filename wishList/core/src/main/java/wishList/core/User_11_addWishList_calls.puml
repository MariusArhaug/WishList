@startuml

/' diagram meta data start
config=CallConfiguration;
{
  "rootMethod": "wishList.core.User#addWishList(WishList)",
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": ""
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false // root node is included
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showMethodParametersTypes": false,
    "showMethodParametersNames": false,
    "showMethodReturnType": false,
    "showPackageLevels": 2,
    "showCallOrder": false,
    "edgeMode": "MethodsOnly", // TypesOnly, MethodsOnly, TypesAndMethods, MethodsAndDirectTypeUsage
    "showDetailedClassStructure": false
  },
  "rootClass": "wishList.core.User"
}
diagram meta data end '/



digraph g {
    rankdir="LR"
    splines=polyline
    

'nodes 
subgraph cluster_3059615 { 
   	label=core
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1660553199 { 
   	label=User
	labeljust=l
	fillcolor=white
	style=filled
   
   User1394157064XXXaddWishList904950267[
	label="+ addWishList()"
	style=filled
	fillcolor=white
	tooltip="User

&#10;  Add new wish list.&#10; &#10;  @param list wish list to add&#10; "
	penwidth=4
	fontcolor=darkgreen
];
} 
} 

subgraph cluster_3271912 { 
   	label=json
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_522399067 { 
   	label=UserDeserializer
	labeljust=l
	fillcolor=white
	style=filled
   
   UserDeserializer1394369361XXXdeserialize1802127749[
	label="+ deserialize()"
	style=filled
	fillcolor=white
	tooltip="UserDeserializer

&#10;  Deserialize user object from wishList.json.&#10; &#10;  @param jsonParser what parser we use&#10;  @param deserializationContext context&#10;  @return user object&#10;  @throws IOException file not found&#10; "
	fontcolor=darkgreen
];
} 
} 

'edges    
UserDeserializer1394369361XXXdeserialize1802127749 -> User1394157064XXXaddWishList904950267;
    
}
@enduml