@startuml

/' diagram meta data start
config=CallConfiguration;
{
  "rootMethod": "wishList.core.User#getEmail()",
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": ""
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false // root node is included
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showMethodParametersTypes": false,
    "showMethodParametersNames": false,
    "showMethodReturnType": false,
    "showPackageLevels": 2,
    "showCallOrder": false,
    "edgeMode": "MethodsOnly", // TypesOnly, MethodsOnly, TypesAndMethods, MethodsAndDirectTypeUsage
    "showDetailedClassStructure": false
  },
  "rootClass": "wishList.core.User"
}
diagram meta data end '/



digraph g {
    rankdir="LR"
    splines=polyline
    

'nodes 
subgraph cluster_3059615 { 
   	label=core
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1660553199 { 
   	label=User
	labeljust=l
	fillcolor=white
	style=filled
   
   User1394157064XXXgetEmail0[
	label="+ getEmail()"
	style=filled
	fillcolor=white
	tooltip="User

null"
	penwidth=4
	fontcolor=darkgreen
];
} 
} 

subgraph cluster_3271912 { 
   	label=json
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1281396762 { 
   	label=UserSerializer
	labeljust=l
	fillcolor=white
	style=filled
   
   UserSerializer1394369361XXXserialize737447261[
	label="+ serialize()"
	style=filled
	fillcolor=white
	tooltip="UserSerializer

&#10;  Serialize user.&#10; &#10;  @param user user to be serialized&#10;  @param jsonGenerator jsonGenerator to be used&#10;  @param serializerProvider provider&#10;  @throws IOException if file to serializer user to is not found&#10; "
	fontcolor=darkgreen
];
} 

subgraph cluster_1309376005 { 
   	label=JsonHandler
	labeljust=l
	fillcolor=white
	style=filled
   
   JsonHandler1394369361XXXaddUser2012146208[
	label="+ addUser()"
	style=filled
	fillcolor=white
	tooltip="JsonHandler

&#10;  Add user to users.wishList.json if it has a unique email&#10; &#10;  @param firstname firstname&#10;  @param lastname lastname&#10;  @param email email&#10;  @param password password&#10;  @return user created&#10;  @throws IllegalArgumentException if email is not unique&#10;  @throws Exception if not found file&#10; "
	fontcolor=darkgreen
];
} 
} 

subgraph cluster_3732 { 
   	label=ui
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_2033919893 { 
   	label=RegisterViewController
	labeljust=l
	fillcolor=white
	style=filled
   
   RegisterViewController1531507907XXXregisterUser1067311644[
	label="+ registerUser()"
	style=filled
	fillcolor=white
	tooltip="RegisterViewController

&#10;  Sign up user.&#10; &#10;  @param event gets state&#10; "
	fontcolor=darkgreen
];
} 
} 

'edges    
JsonHandler1394369361XXXaddUser2012146208 -> User1394157064XXXgetEmail0;
RegisterViewController1531507907XXXregisterUser1067311644 -> JsonHandler1394369361XXXaddUser2012146208;
UserSerializer1394369361XXXserialize737447261 -> User1394157064XXXgetEmail0;
    
}
@enduml